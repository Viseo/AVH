<!DOCTYPE html>

<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Live input record and playback</title>
    <style type='text/css'>
      ul { list-style: none; }
      #recordingslist audio { display: block; margin-bottom: 10px; }
    </style>
  <script src="./recorder.js"></script>


  </head>
  <body>

  <h1>Recorder</h1>


  <button onclick="startRecording(this);">record</button>
  <button onclick="stopRecording(this);" disabled>stop</button>

  <h2>Recordings</h2>
  <ul id="recordingslist"></ul>

  <h2>Log</h2>
  <pre id="log"></pre>

  <script>

    function __log(e, data) {
      log.innerHTML += "\n" + e + " " + (data || '');
    }

    var audio_context;
    var recorder;
    function startUserMedia(stream) {
      var input = audio_context.createMediaStreamSource(stream);
      __log('Media stream created.');

    // Uncomment if you want the audio to feedback directly
    input.connect(audio_context.destination);
    __log('Input connected to audio context destination.');

      recorder = new Recorder(input);
      __log('Recorder initialised.');
    }

    function startRecording(button) {
      recorder && recorder.record();
      button.disabled = true;
      button.nextElementSibling.disabled = false;
      __log('Recording...');
    }

    function stopRecording(button) {
      recorder && recorder.stop();
      button.disabled = true;
      button.previousElementSibling.disabled = false;
      __log('Stopped recording.');

      createDownloadLink();

      recorder.clear();
    }

    var au;
    var hf;
    function createDownloadLink() {
      "use strict";
      recorder && recorder.exportWAV(function(blob) {
        var url = URL.createObjectURL(blob);
        var li = document.createElement('li');
        au = document.createElement('audio');
        hf = document.createElement('a');

        au.controls = true;
        au.src = url;
        hf.href = url;
//      hf.download = new Date().toISOString() + '.wav';
        hf.download = 'file.wav'; //nom
        hf.innerHTML = hf.download;
        li.appendChild(au);
        li.appendChild(hf);
        recordingslist.appendChild(li);

      });
    }

    window.onload = function init() {
      try {
        window.AudioContext = window.AudioContext || window.webkitAudioContext;
        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia;
        window.URL = window.URL || window.webkitURL;

        audio_context = new AudioContext;
        __log('Audio context set up.');
        __log('navigator.getUserMedia ' + (navigator.getUserMedia ? 'available.' : 'not present!'));
      } catch (e) {
        alert('No web audio support in this browser!');
      }

      navigator.getUserMedia({audio: true}, startUserMedia, function(e) {
        __log('No live audio input: ' + e);
      });
    };

    localStorage.setItem("audfile",au);
    localStorage.setItem("hfaudfile",hf);

  </script>



  <a href="http://127.0.0.1:8081/load"> recognize renaulttest.wav (fichier donne en dur)</a>
  <br>
  <a href="http://127.0.0.1:8081/loadtest"> recognize renaulttest.wav (fichier donne en dur)</a>


  </body>
</html>
